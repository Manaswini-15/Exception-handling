Exception Handling in Java
The Exception Handling in Java is one of the powerful mechanism to handle the runtime errors so that the normal flow of the application can be maintained.
In this tutorial, we will learn about Java exceptions, it's types, and the difference between checked and unchecked exceptions.
Types of Java Exceptions
There are mainly two types of exceptions: checked and unchecked. An error is considered as the unchecked exception. 
However, according to Oracle, there are three types of exceptions namely:
Checked Exception
Unchecked Exception
Error
1) Checked Exception
The classes that directly inherit the Throwable class except RuntimeException and Error are known as checked exceptions. 
For example, IOException, SQLException, etc.
Checked exceptions are checked at compile-time.

2) Unchecked Exception
The classes that inherit the RuntimeException are known as unchecked exceptions. 
For example, ArithmeticException, NullPointerException, ArrayIndexOutOfBoundsException, etc.
Unchecked exceptions are not checked at compile-time, but they are checked at runtime
3) Error
Error is irrecoverable. Some example of errors are OutOfMemoryError, VirtualMachineError, AssertionError etc.
example of exception handling:


public class JavaExceptionExample{  
  public static void main(String args[]){  
   try{  
      //code that may raise exception  
      int data=100/0;  
   }catch(ArithmeticException e){System.out.println(e);}  
   //rest code of the program   
   System.out.println("rest of the code...");  
  }  
}  
Output:

Exception in thread main java.lang.ArithmeticException:/ by zero
rest of the code...
Types of exceptions:
Built-in exceptions are the exceptions which are available in Java libraries. These exceptions are suitable to explain certain error situations. Below is the list of important built-in exceptions in Java. 

ArithmeticException 
It is thrown when an exceptional condition has occurred in an arithmetic operation.
ArrayIndexOutOfBoundsException 
It is thrown to indicate that an array has been accessed with an illegal index. The index is either negative or greater than or equal to the size of the array.
ClassNotFoundException 
This Exception is raised when we try to access a class whose definition is not found
FileNotFoundException 
This Exception is raised when a file is not accessible or does not open.
IOException 
It is thrown when an input-output operation failed or interrupted
InterruptedException 
It is thrown when a thread is waiting, sleeping, or doing some processing, and it is interrupted.
NoSuchFieldException 
It is thrown when a class does not contain the field (or variable) specified
NoSuchMethodException 
It is thrown when accessing a method which is not found.
NullPointerException 
This exception is raised when referring to the members of a null object. Null represents nothing
This Exception is raised when we try to access a class whose definition is not found
FileNotFoundException 
This Exception is raised when a file is not accessible or does not open.
IOException 
It is thrown when an input-output operation failed or interrupted
InterruptedException 
It is thrown when a thread is waiting, sleeping, or doing some processing, and it is interrupted.
